[18 of 18] Compiling System.Hardware.Haskino.SamplePrograms.Strong.TwoButton ( System/Hardware/Haskino/SamplePrograms/Rewrite/TwoButton.hs, System/Hardware/Haskino/SamplePrograms/Rewrite/TwoButton.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 116, types: 82, coercions: 4}

Rec {
-- RHS size: {terms: 6, types: 6, coercions: 0}
abs [InlPrag=NOINLINE, Occ=LoopBreaker!]
  :: forall a_a77A. ExprB a_a77A => a_a77A -> Expr a_a77A
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType]
abs =
  \ (@ a_a7fj) ($dExprB_a7mZ :: ExprB a_a7fj) (w_a77H :: a_a7fj) ->
    lit @ a_a7fj $dExprB_a7mZ w_a77H
end Rec }

-- RHS size: {terms: 2, types: 0, coercions: 0}
$trModule1_r7Aa :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=DmdType]
$trModule1_r7Aa = GHC.Types.TrNameS "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0}
$trModule2_r7Ai :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=DmdType]
$trModule2_r7Ai =
  GHC.Types.TrNameS
    "System.Hardware.Haskino.SamplePrograms.Strong.TwoButton"#

-- RHS size: {terms: 3, types: 0, coercions: 0}
System.Hardware.Haskino.SamplePrograms.Strong.TwoButton.$trModule
  :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=DmdType]
System.Hardware.Haskino.SamplePrograms.Strong.TwoButton.$trModule =
  GHC.Types.Module $trModule1_r7Aa $trModule2_r7Ai

-- RHS size: {terms: 20, types: 3, coercions: 0}
$dIP_r7Aj :: GHC.Stack.Types.CallStack
[GblId, Str=DmdType]
$dIP_r7Aj =
  GHC.Stack.Types.pushCallStack
    (GHC.CString.unpackCString# "error"#,
     GHC.Stack.Types.SrcLoc
       (GHC.CString.unpackCString# "main"#)
       (GHC.CString.unpackCString#
          "System.Hardware.Haskino.SamplePrograms.Strong.TwoButton"#)
       (GHC.CString.unpackCString#
          "System/Hardware/Haskino/SamplePrograms/Rewrite/TwoButton.hs"#)
       (GHC.Types.I# 46#)
       (GHC.Types.I# 9#)
       (GHC.Types.I# 46#)
       (GHC.Types.I# 44#))
    GHC.Stack.Types.emptyCallStack

Rec {
-- RHS size: {terms: 6, types: 6, coercions: 4}
rep [InlPrag=NOINLINE, Occ=LoopBreaker!]
  :: forall a_a77B. Expr a_a77B -> a_a77B
[GblId, Arity=1, Str=DmdType]
rep =
  \ (@ a_a7ft) _ [Occ=Dead] ->
    error
      @ 'GHC.Types.PtrRepLifted
      @ a_a7ft
      ($dIP_r7Aj
       `cast` (Sym
                 (GHC.Classes.N:IP[0] <"callStack">_N <GHC.Stack.Types.CallStack>_N)
               :: (GHC.Stack.Types.CallStack :: *)
                  ~R#
                  ((?callStack::GHC.Stack.Types.CallStack) :: Constraint)))
      (GHC.CString.unpackCString# "Internal error: repB called"#)
end Rec }

-- RHS size: {terms: 3, types: 1, coercions: 0}
led_r7Ak :: Pin
[GblId, Str=DmdType]
led_r7Ak = fromInteger @ Pin GHC.Word.$fNumWord8 13

-- RHS size: {terms: 3, types: 1, coercions: 0}
button1_r7Al :: Pin
[GblId, Str=DmdType]
button1_r7Al = fromInteger @ Pin GHC.Word.$fNumWord8 2

-- RHS size: {terms: 3, types: 1, coercions: 0}
button2_r7Am :: Pin
[GblId, Str=DmdType]
button2_r7Am = fromInteger @ Pin GHC.Word.$fNumWord8 3

-- RHS size: {terms: 52, types: 41, coercions: 0}
twoButtonProg :: Arduino ()
[GblId, Str=DmdType]
twoButtonProg =
  >>
    @ Arduino
    System.Hardware.Haskino.Data.$fMonadArduino
    @ ()
    @ ()
    (setPinModeE
       (abs @ Word8 System.Hardware.Haskino.Expr.$fExprBWord8 led_r7Ak)
       System.Hardware.Haskino.Data.OUTPUT)
    (>>
       @ Arduino
       System.Hardware.Haskino.Data.$fMonadArduino
       @ ()
       @ ()
       (setPinModeE
          (abs
             @ Word8 System.Hardware.Haskino.Expr.$fExprBWord8 button1_r7Al)
          System.Hardware.Haskino.Data.INPUT)
       (>>
          @ Arduino
          System.Hardware.Haskino.Data.$fMonadArduino
          @ ()
          @ ()
          (setPinModeE
             (abs
                @ Word8 System.Hardware.Haskino.Expr.$fExprBWord8 button2_r7Am)
             System.Hardware.Haskino.Data.INPUT)
          (loopE
             (>>=
                @ Arduino
                System.Hardware.Haskino.Data.$fMonadArduino
                @ (Expr Bool)
                @ ()
                (digitalReadE
                   (abs
                      @ Word8 System.Hardware.Haskino.Expr.$fExprBWord8 button1_r7Al))
                (. @ Bool
                   @ (Arduino ())
                   @ (Expr Bool)
                   (\ (a_a77F :: Bool) ->
                      >>=
                        @ Arduino
                        System.Hardware.Haskino.Data.$fMonadArduino
                        @ (Expr Bool)
                        @ ()
                        (digitalReadE
                           (abs
                              @ Word8 System.Hardware.Haskino.Expr.$fExprBWord8 button2_r7Am))
                        (. @ Bool
                           @ (Arduino ())
                           @ (Expr Bool)
                           (\ (b_a77G :: Bool) ->
                              digitalWriteE
                                (abs @ Word8 System.Hardware.Haskino.Expr.$fExprBWord8 led_r7Ak)
                                (||*
                                   @ (Expr Bool)
                                   System.Hardware.Haskino.Expr.$fBooleanExpr
                                   (abs @ Bool System.Hardware.Haskino.Expr.$fExprBBool a_a77F)
                                   (abs @ Bool System.Hardware.Haskino.Expr.$fExprBBool b_a77G)))
                           (rep @ Bool)))
                   (rep @ Bool))))))

-- RHS size: {terms: 5, types: 0, coercions: 0}
twoButton :: IO ()
[GblId, Str=DmdType]
twoButton =
  withArduino
    GHC.Types.True
    (GHC.CString.unpackCString# "/dev/cu.usbmodem1421"#)
    twoButtonProg



